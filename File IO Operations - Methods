import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;

import java.nio.channels.FileChannel;
import java.io.FileInputStream;
import java.io.FileOutputStream;

import java.io.BufferedReader;
import java.io.FileReader;

import java.io.BufferedWriter;
import java.io.FileWriter;

/*Text file contents are transferred to a TableView. Note that the file contents must support the TableView span properties.
For example, if a Table is for a Senior and there are 5 columns, each Senior profile in the text file should have 5 components.
*/

public static void load() {

}

/*Content in recent.txt is copied to previous.txt. New information is written to recent.txt. Now, edit history up to the last
two save points have been preserved.*/

public static void save() {

}

/*Note: may change access modifier to private. Helper, utility method for save()*/
public static void copy(File source, File destination) {
  		try (FileInputStream in = new FileInputStream(source);
			 FileOutputStream out = new FileOutputStream(destination);
			 FileChannel from = in.getChannel();
		     FileChannel to = out.getChannel();
			 ) {
			
			to.transferFrom(from, 0, from.size());
			System.out.println("File copied successfully.");
			
		} catch (IOException e) {
			e.printStackTrace();
		} catch (Exception e) {
			e.printStackTrace();
		}
}

/*In essence, reload exchanges information in previous.txt with recent.txt and uploads the new recent.txt into the database.*/
public static void reload() {

}
